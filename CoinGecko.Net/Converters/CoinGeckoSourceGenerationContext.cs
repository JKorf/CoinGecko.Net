using CoinGecko.Net.Objects.Models;
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace CoinGecko.Net.Converters
{
    
    // End manual defined attributes

    [JsonSerializable(typeof(IDictionary<string, object>))]
    [JsonSerializable(typeof(ItemWrapper<CoinGeckoTrendingAsset>))]
    [JsonSerializable(typeof(CoinGeckoApiUsage[]))]
    [JsonSerializable(typeof(CoinGeckoAsset[]))]
    [JsonSerializable(typeof(CoinGeckoAssetDetails[]))]
    [JsonSerializable(typeof(CoinGeckoAssetExchange[]))]
    [JsonSerializable(typeof(CoinGeckoAssetHistory[]))]
    [JsonSerializable(typeof(CoinGeckoMarketDataBasic[]))]
    [JsonSerializable(typeof(CoinGeckoAssetPlatform[]))]
    [JsonSerializable(typeof(CoinGeckoCategory[]))]
    [JsonSerializable(typeof(CoinGeckoCodeAddDel[]))]
    [JsonSerializable(typeof(CoinGeckoCommunityData[]))]
    [JsonSerializable(typeof(CoinGeckoCompanyHolding[]))]
    [JsonSerializable(typeof(CoinGeckoCompanyAsset[]))]
    [JsonSerializable(typeof(CoinGeckoDerivative[]))]
    [JsonSerializable(typeof(CoinGeckoDerivativeTicker[]))]
    [JsonSerializable(typeof(CoinGeckoDeveloperData[]))]
    [JsonSerializable(typeof(CoinGeckoExchange[]))]
    [JsonSerializable(typeof(CoinGeckoExchangeDerivative[]))]
    [JsonSerializable(typeof(CoinGeckoExchangeDetails[]))]
    [JsonSerializable(typeof(CoinGeckoExchangeRates[]))]
    [JsonSerializable(typeof(CoinGeckoExchangeRate[]))]
    [JsonSerializable(typeof(CoinGeckoGlobalDataWrapper[]))]
    [JsonSerializable(typeof(CoinGeckoGlobalData[]))]
    [JsonSerializable(typeof(CoinGeckoGlobalDefiDataWrapper[]))]
    [JsonSerializable(typeof(CoinGeckoGlobalDefiData[]))]
    [JsonSerializable(typeof(CoinGeckoImages[]))]
    [JsonSerializable(typeof(CoinGeckoLinks[]))]
    [JsonSerializable(typeof(CoinGeckoListItem[]))]
    [JsonSerializable(typeof(CoinGeckoMarket[]))]
    [JsonSerializable(typeof(CoinGeckoMarketRoi[]))]
    [JsonSerializable(typeof(CoinGeckoMarketChart[]))]
    [JsonSerializable(typeof(CoinGeckoMarketChartValue[]))]
    [JsonSerializable(typeof(CoinGeckoMarketData[]))]
    [JsonSerializable(typeof(CoinGeckoMarketDataCategory[]))]
    [JsonSerializable(typeof(CoinGeckoNft[]))]
    [JsonSerializable(typeof(CoinGeckoNftDetails[]))]
    [JsonSerializable(typeof(CoinGeckoNftValue[]))]
    [JsonSerializable(typeof(CoinGeckoNftDate[]))]
    [JsonSerializable(typeof(CoinGeckoNftLink[]))]
    [JsonSerializable(typeof(CoinGeckoOhlc[]))]
    [JsonSerializable(typeof(CoinGeckoPlatform[]))]
    [JsonSerializable(typeof(CoinGeckoPublicInterestStats[]))]
    [JsonSerializable(typeof(CoinGeckoSearchResult[]))]
    [JsonSerializable(typeof(CoinGeckoAssetResult[]))]
    [JsonSerializable(typeof(CoinGeckoExchangeResult[]))]
    [JsonSerializable(typeof(CoinGeckoCategoryResult[]))]
    [JsonSerializable(typeof(CoinGeckoNftResult[]))]
    [JsonSerializable(typeof(CoinGeckoStatusUpdate[]))]
    [JsonSerializable(typeof(CoinGeckoProject[]))]
    [JsonSerializable(typeof(CoinGeckoTicker[]))]
    [JsonSerializable(typeof(CoinGeckoTickers[]))]
    [JsonSerializable(typeof(CoinGeckoTrendingSearch[]))]
    [JsonSerializable(typeof(CoinGeckoTrendingAsset[]))]
    [JsonSerializable(typeof(CoinGeckoTrendingNft[]))]
    [JsonSerializable(typeof(CoinGeckoTrendingNftData[]))]
    [JsonSerializable(typeof(CoinGeckoTrendingCategory[]))]
    [JsonSerializable(typeof(CoinGeckoTrendingCategoryData[]))]
    [JsonSerializable(typeof(string))]
    [JsonSerializable(typeof(int?))]
    [JsonSerializable(typeof(int))]
    [JsonSerializable(typeof(long?))]
    [JsonSerializable(typeof(long))]
    [JsonSerializable(typeof(decimal?))]
    [JsonSerializable(typeof(decimal))]
    [JsonSerializable(typeof(DateTime))]
    [JsonSerializable(typeof(DateTime?))]
    internal partial class CoinGeckoSourceGenerationContext : JsonSerializerContext
    {
    }
}
